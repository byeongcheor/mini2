/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.91
 * Generated at: 2024-09-09 00:34:36 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.mypage;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class mypage_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(4);
    _jspx_dependants.put("/layout/header.jspf", Long.valueOf(1725792806775L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1724403605343L));
    _jspx_dependants.put("jar:file:/C:/Users/ICT01-21/Desktop/miniProject%2009-03/miniProject%2009-08pm08.24/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/miniProject2/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("/layout/footer.jspf", Long.valueOf(1725708625814L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fif_0026_005ftest;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>DANDI</title>\r\n");
      out.write("\r\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n");
      out.write("<!-- 부트스트랩 -->\r\n");
      out.write("<link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css\" rel=\"stylesheet\">\r\n");
      out.write("<script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js\"></script>\r\n");
      out.write("<!-- 슬릭슬라이더 -->\r\n");
      out.write("<!-- 제이쿼리 -->\r\n");
      out.write("<script\r\n");
      out.write("   src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js\"></script>\r\n");
      out.write("<!--slick slider 필요 태그 st-->\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"//cdn.jsdelivr.net/npm/slick-carousel@1.8.1/slick/slick.css\"/>\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"//cdnjs.cloudflare.com/ajax/libs/slick-carousel/1.5.8/slick-theme.min.css\">\r\n");
      out.write("<!-- jQuery CDN -->\r\n");
      out.write("<script src=\"//code.jquery.com/jquery-1.11.0.min.js\"></script>\r\n");
      out.write("<script src=\"//code.jquery.com/jquery-migrate-1.2.1.min.js\"></script>\r\n");
      out.write("<!-- slick Carousel CDN -->\r\n");
      out.write("<script type=\"text/javascript\" src=\"//cdn.jsdelivr.net/jquery.slick/1.5.7/slick.min.js\"></script>\r\n");
      out.write("\r\n");
      out.write("<!--폰트-->\r\n");
      out.write("<link rel=\"preconnect\" href=\"https://fonts.googleapis.com\">\r\n");
      out.write("<link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin>\r\n");
      out.write("<link href=\"https://fonts.googleapis.com/css2?family=Gothic+A1:wght@100;200;300;400;500;600;700;800;900&display=swap\" rel=\"stylesheet\">\r\n");
      out.write("<link rel=\"preconnect\" href=\"https://fonts.googleapis.com\">\r\n");
      out.write("<link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin>\r\n");
      out.write("<link href=\"https://fonts.googleapis.com/css2?family=Gothic+A1:wght@100;200;300;400;500;600;700;800;900&family=Noto+Sans:ital,wght@0,100..900;1,100..900&display=swap\" rel=\"stylesheet\">\r\n");
      out.write("\r\n");
      out.write("<link rel=\"stylesheet\" href=\"/mini/css/header.css\" type=\"text/css\"/>\r\n");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("   $(document).ready(function(){\r\n");
      out.write("         $('.autoplay').slick({\r\n");
      out.write("            centerMode: true,\r\n");
      out.write("            slidesToShow: 4,\r\n");
      out.write("            slidesToScroll: 1,\r\n");
      out.write("            autoplay: true,\r\n");
      out.write("            autoplaySpeed: 2000,\r\n");
      out.write("           \r\n");
      out.write("            draggable:true ,\r\n");
      out.write("            infinite: true\r\n");
      out.write("         });\r\n");
      out.write("      \r\n");
      out.write("   });\r\n");
      out.write("   $(document).ready(function(){\r\n");
      out.write("      $('.center').slick({\r\n");
      out.write("         centerMode: true,\r\n");
      out.write("         centerPadding: '60px',\r\n");
      out.write("         slidesToShow: 5,\r\n");
      out.write("         autoplay: true,\r\n");
      out.write("         autoplaySpeed: 2000,\r\n");
      out.write("       \r\n");
      out.write("         draggable:true ,\r\n");
      out.write("         infinite: true,\r\n");
      out.write("         responsive: [\r\n");
      out.write("         {\r\n");
      out.write("            breakpoint: 768,\r\n");
      out.write("            settings: {\r\n");
      out.write("            arrows: false,\r\n");
      out.write("            centerMode: true,\r\n");
      out.write("            centerPadding: '40px',\r\n");
      out.write("            slidesToShow: 3\r\n");
      out.write("            }\r\n");
      out.write("         },\r\n");
      out.write("         {\r\n");
      out.write("            breakpoint: 480,\r\n");
      out.write("            settings: {\r\n");
      out.write("            arrows: false,\r\n");
      out.write("            centerMode: true,\r\n");
      out.write("            centerPadding: '40px',\r\n");
      out.write("            slidesToShow: 1\r\n");
      out.write("            }\r\n");
      out.write("         }\r\n");
      out.write("      ]\r\n");
      out.write("      });\r\n");
      out.write("   });\r\n");
      out.write("</script>\r\n");
      out.write("<script>\r\n");
      out.write("   $(function(){\r\n");
      out.write("          // 스크롤 시 header fade-in\r\n");
      out.write("          $(document).on('scroll', function(){\r\n");
      out.write("              if($(window).scrollTop() > 100){\r\n");
      out.write("                  $(\"#header\").removeClass(\"deactive\");\r\n");
      out.write("                  $(\"#header\").addClass(\"active\");\r\n");
      out.write("              }else{\r\n");
      out.write("                  $(\"#header\").removeClass(\"active\");\r\n");
      out.write("                  $(\"#header\").addClass(\"deactive\");\r\n");
      out.write("              }\r\n");
      out.write("          })\r\n");
      out.write("      \r\n");
      out.write("      });\r\n");
      out.write("   function openLoginPopup() {\r\n");
      out.write("       window.open('/mini/mypage/login', 'LoginPopup', 'width=465, height=525 ,left=1200, top=150');\r\n");
      out.write("   }\r\n");
      out.write("\r\n");
      out.write("   function joinPopup(){\r\n");
      out.write("       window.open('/mini/mypage/join', 'JoinPopup', 'width=530, height=930 ,left=1200, top=80');\r\n");
      out.write("   }\r\n");
      out.write("\r\n");
      out.write("   function findIdPopup(){\r\n");
      out.write("       window.open('/mini/mypage/findId', 'findIdPopup', 'width=465, height=525 ,left=1200, top=150');\r\n");
      out.write("   }\r\n");
      out.write("   function findPwdPopup(){\r\n");
      out.write("       window.open('/mini/mypage/findPwd', 'findPwdPopup', 'width=465, height=525 ,left=1200, top=150');\r\n");
      out.write("   }\r\n");
      out.write("   \r\n");
      out.write("   function loginClosed() {\r\n");
      out.write("       // 로그인 처리 로직\r\n");
      out.write("       // 예를 들어, resultVo를 통해 사용자 정보를 가져왔다고 가정합니다.\r\n");
      out.write("       const userId = resultVo.getUserid();\r\n");
      out.write("       const userName = resultVo.getUsername();\r\n");
      out.write("       \r\n");
      out.write("       // 세션에 로그인 상태 저장 (예시로 localStorage 사용)\r\n");
      out.write("       session.setAttribute(\"logId\", resultVo.getUserid());\r\n");
      out.write("      session.setAttribute(\"logName\", resultVo.getUsername());\r\n");
      out.write("      session.setAttribute(\"logStatus\", \"Y\");\r\n");
      out.write("      \r\n");
      out.write("\r\n");
      out.write("       // 메인 페이지의 로컬 스토리지 업데이트 및 로그인 상태 갱신\r\n");
      out.write("       if (window.opener && !window.opener.closed) {\r\n");
      out.write("           window.opener.updateLoginStatus(userId, userName);\r\n");
      out.write("       }\r\n");
      out.write("\r\n");
      out.write("       // 팝업 창 닫기\r\n");
      out.write("       window.close();\r\n");
      out.write("   }\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write(" ");

    Boolean excludeHeader = (Boolean) request.getAttribute("excludeHeader");

    if (excludeHeader == null || !excludeHeader) {

      out.write("\r\n");
      out.write("   <header>\r\n");
      out.write("       <div id=\"header\" class=\"deactive\">\r\n");
      out.write("         <h1 class=\"title\">\r\n");
      out.write("            <a href=\"/mini/\"><img src=\"/mini/images/main/logo.png\"></a>\r\n");
      out.write("         </h1>\r\n");
      out.write("         <!--검색창구현-->\r\n");
      out.write("         <nav>\r\n");
      out.write("            <ul>\r\n");
      out.write("               <li><a href=\"/mini/festival/festivalList\">Festival</a></li>\r\n");
      out.write("               <li><a href=\"/mini/rest/restList\">Food</a></li>\r\n");
      out.write("               <li><a href=\"/mini/course/courseList\">Course</a></li>\r\n");
      out.write("               <li><a href=\"/mini/calendar/cal\">Calendar</a></li>\r\n");
      out.write("\r\n");
      out.write("               ");
      if (_jspx_meth_c_005fif_005f0(_jspx_page_context))
        return;
      out.write("   \r\n");
      out.write("               ");
      if (_jspx_meth_c_005fif_005f1(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("            </ul>\r\n");
      out.write("         </nav>\r\n");
      out.write("      </div> \r\n");
      out.write("   </header>\r\n");

    }

      out.write('\r');
      out.write('\n');
      out.write("\r\n");
      out.write("\r\n");
      out.write("<style>\r\n");
      out.write("\r\n");
      out.write(".mypageFrm h2{\r\n");
      out.write("   width: auto;\r\n");
      out.write("    margin: 200px 0 10px 150px;\r\n");
      out.write("    font-size:2em;\r\n");
      out.write("}\r\n");
      out.write(".mypage_Main{\r\n");
      out.write("   height: auto;\r\n");
      out.write("    background-color: #f3f5f7;\r\n");
      out.write("    padding:30px 120px 120px 120px;\r\n");
      out.write("}\r\n");
      out.write(".mypage_Top{\r\n");
      out.write("   background-color : #87CEEB;\r\n");
      out.write("   padding:20px;\r\n");
      out.write("   margin:30px;\r\n");
      out.write("   height:380px;\r\n");
      out.write("    \r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".tit_cont button{\r\n");
      out.write("   background: none;  /* 배경 제거 */\r\n");
      out.write("    border: none;      /* 테두리 제거 */\r\n");
      out.write("    padding: 0;        /* 여백 제거 */\r\n");
      out.write("    margin: 0;         /* 외부 여백 제거 */\r\n");
      out.write("    cursor: pointer;\r\n");
      out.write("}\r\n");
      out.write(".tit_cont button img{\r\n");
      out.write(" \r\n");
      out.write("    width: 10px;       /* 이미지의 크기를 조절 */\r\n");
      out.write("    height: auto;      /* 이미지의 비율을 유지 */\r\n");
      out.write("   \r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".tit_cont{\r\n");
      out.write(" margin-bottom: 10px;\r\n");
      out.write(" position: absolute; /* 절대 위치 사용 */\r\n");
      out.write("  top: -10; /* 위쪽 끝 */\r\n");
      out.write("  right:-10; /* 오른쪽 끝 */\r\n");
      out.write("}\r\n");
      out.write(".btn_file img{\r\n");
      out.write("   width:8px;\r\n");
      out.write("}\r\n");
      out.write(".pop_subMenu a {\r\n");
      out.write("    outline: none;             /* 포커스 아웃라인 제거 */\r\n");
      out.write("    text-decoration: none;     /* 밑줄 제거 (필요한 경우) */\r\n");
      out.write("    color: black;              /* 글자색을 항상 검정색으로 설정 */\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".pop_subMenu ul {\r\n");
      out.write("    padding: 0;                /* 불필요한 패딩 제거 */\r\n");
      out.write("    margin: 0;                 /* 불필요한 마진 제거 */\r\n");
      out.write("    list-style: none;          /* 목록 스타일 제거 (기본 점, 숫자 등) */\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".pop_subMenu li {\r\n");
      out.write("    margin-bottom: 5px;                 /* li 요소의 기본 마진 제거 */\r\n");
      out.write("    padding: 0;                /* li 요소의 기본 패딩 제거 */\r\n");
      out.write("}\r\n");
      out.write("#profileUpdate{\r\n");
      out.write("outline: none;             /* 포커스 아웃라인 제거 */\r\n");
      out.write("    text-decoration: none;     /* 밑줄 제거 (필요한 경우) */\r\n");
      out.write("    color: #fff;   \r\n");
      out.write("    font-size:20px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".profile .photo {\r\n");
      out.write("   width: 150px; /* 원형의 너비 */\r\n");
      out.write("    height: 150px; /* 원형의 높이 */\r\n");
      out.write("    \r\n");
      out.write("    border-radius: 50%; /* 원형으로 만들기 */\r\n");
      out.write("    background-position: center; /* 이미지 중앙에 위치 */\r\n");
      out.write("    background-repeat: no-repeat; /* 이미지 반복 안 함 */\r\n");
      out.write("    background-size: cover; /* 이미지가 요소를 가득 채우도록 설정 */\r\n");
      out.write("  }\r\n");
      out.write(".profile{\r\n");
      out.write("display: flex; /* Flexbox를 사용하여 가운데 정렬 */\r\n");
      out.write("    align-items: center; /* 세로 중앙 정렬 */\r\n");
      out.write("    justify-content: center; /* 가로 중앙 정렬 */\r\n");
      out.write("    height:210px;\r\n");
      out.write("}\r\n");
      out.write(".profilename{\r\n");
      out.write("margin:10px 0 0 0;\r\n");
      out.write("text-align: center;\r\n");
      out.write("font-size:1.2em;\r\n");
      out.write("font-weight:500\r\n");
      out.write("}\r\n");
      out.write(".profileuserName{\r\n");
      out.write("font-size:1.8em;\r\n");
      out.write(" text-align: center;\r\n");
      out.write(" font-weight: bold;\r\n");
      out.write("\r\n");
      out.write("}\r\n");
      out.write(".btn_file{\r\n");
      out.write("text-align: center;\r\n");
      out.write("\r\n");
      out.write("}\r\n");
      out.write(".mypage_botton h2{\r\n");
      out.write("   width: auto;\r\n");
      out.write("    margin: 30px 0 10px 40px;\r\n");
      out.write("    font-size:1.6em;\r\n");
      out.write("}\r\n");
      out.write(".mypage_botton_inr{\r\n");
      out.write("   background-color : #fff;\r\n");
      out.write("   padding:20px;\r\n");
      out.write("   margin:0 30px;\r\n");
      out.write("   height:170px;\r\n");
      out.write("   \r\n");
      out.write("}\r\n");
      out.write(".mypage_botton_inr a {\r\n");
      out.write("    outline: none;             /* 포커스 아웃라인 제거 */\r\n");
      out.write("    text-decoration: none;     /* 밑줄 제거 (필요한 경우) */\r\n");
      out.write("    color: black;              /* 글자색을 항상 검정색으로 설정 */\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".mypage_botton_inr ul {\r\n");
      out.write("    padding: 0;                /* 불필요한 패딩 제거 */\r\n");
      out.write("    margin: 0;                 /* 불필요한 마진 제거 */\r\n");
      out.write("    list-style: none;          /* 목록 스타일 제거 (기본 점, 숫자 등) */\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".mypage_botton_inr li {\r\n");
      out.write("    margin: 0;                 /* li 요소의 기본 마진 제거 */\r\n");
      out.write("    padding: 0;                /* li 요소의 기본 패딩 제거 */\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".mypage_botton_inr em{\r\n");
      out.write("display: inline-block;\r\n");
      out.write("    position: absolute;\r\n");
      out.write("    left: 80px;\r\n");
      out.write("    height: 26px;\r\n");
      out.write("    min-width: 26px;\r\n");
      out.write("    line-height: 26px;\r\n");
      out.write("    padding: 0 7px;\r\n");
      out.write("    border-radius: 50px;\r\n");
      out.write("    color: #fff;\r\n");
      out.write("    font-size: 16px;\r\n");
      out.write("    background: #4765cf;\r\n");
      out.write("    box-sizing: border-box;\r\n");
      out.write("}\r\n");
      out.write(".mypage_botton_inr ul{\r\n");
      out.write("  height: 130px;\r\n");
      out.write("   margin: 0 80px;\r\n");
      out.write("   padding: 10px 0 0;\r\n");
      out.write("    display: flex;\r\n");
      out.write("    flex-wrap: wrap;\r\n");
      out.write("    \r\n");
      out.write("    \r\n");
      out.write("  }\r\n");
      out.write("  .mypage_botton_inr ul li{\r\n");
      out.write("     height: 50px;\r\n");
      out.write("      width: 33.3%;\r\n");
      out.write("    text-align: center;\r\n");
      out.write("  \r\n");
      out.write("    }   \r\n");
      out.write("    .mypage_botton_inr p{\r\n");
      out.write("       margin:5px 0 0 0;\r\n");
      out.write("    } \r\n");
      out.write("    \r\n");
      out.write("   .mypage_botton_inr ul li a{\r\n");
      out.write("    position: relative;\r\n");
      out.write("   \r\n");
      out.write("    }   \r\n");
      out.write("    .pop_subMenu {\r\n");
      out.write("            display: none; /* 처음에는 숨김 */\r\n");
      out.write("            width: 200px;\r\n");
      out.write("            height: 160px;\r\n");
      out.write("            background-color: #fff;\r\n");
      out.write("            padding: 20px;\r\n");
      out.write("            margin-top: 20px;\r\n");
      out.write("        }\r\n");
      out.write("  button {\r\n");
      out.write("        all: unset;\r\n");
      out.write("        cursor: pointer;\r\n");
      out.write("        color:#fff;\r\n");
      out.write("        background: transparent;\r\n");
      out.write("        border: none;\r\n");
      out.write("        padding: 0;\r\n");
      out.write("        font-size:1.2em;\r\n");
      out.write("        \r\n");
      out.write("    }\r\n");
      out.write("    #admin{\r\n");
      out.write("        	width:90px;\r\n");
      out.write("        	height:90px;\r\n");
      out.write("        	border-radius: 30px;\r\n");
      out.write("        }\r\n");
      out.write("    \r\n");
      out.write("</style>\r\n");
      out.write("<script>\r\n");
      out.write("window.onload = function() {\r\n");
      out.write("    var listItems = document.querySelectorAll('.mypage_botton_inr ul li');\r\n");
      out.write("    var listLength = listItems.length;\r\n");
      out.write("    var width;\r\n");
      out.write("\r\n");
      out.write("    if (listLength === 3) {\r\n");
      out.write("        width = '33.3%';\r\n");
      out.write("    } else if (listLength === 4) {\r\n");
      out.write("        width = '24%';\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    listItems.forEach(function(item) {\r\n");
      out.write("        item.style.width = width;\r\n");
      out.write("    });\r\n");
      out.write("};\r\n");
      out.write("//점 세개 이미지 누르면 숨겨진 박스 나오게\r\n");
      out.write("function toggleDiv() {\r\n");
      out.write("            var hiddenBox = document.getElementById('hidden_Menu');\r\n");
      out.write("            \r\n");
      out.write("            if (hiddenBox.style.display === 'none' || hiddenBox.style.display === '') {\r\n");
      out.write("                hiddenBox.style.display = 'block'; // 박스를 보여줍니다.\r\n");
      out.write("            } else {\r\n");
      out.write("                hiddenBox.style.display = 'none'; // 박스를 숨깁니다.\r\n");
      out.write("            }\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("function chk(){\r\n");
      out.write("    //회원 탈퇴 확인하기\r\n");
      out.write("    if(confirm(\"회원을 탈퇴하시겠습니까?\")){\r\n");
      out.write("        location.href = \"/mini/mypage/unjoins\";\r\n");
      out.write("    }\r\n");
      out.write("}\r\n");
      out.write("</script>\r\n");
      out.write("<script>\r\n");
      out.write("function submitForm() {\r\n");
      out.write("    var form = document.getElementById('profileForm');\r\n");
      out.write("    var formData = new FormData(form);\r\n");
      out.write("\r\n");
      out.write("    console.log('Sending request with form data:', formData);\r\n");
      out.write("\r\n");
      out.write("    fetch('/mini/mypage/updateProfileImage', {\r\n");
      out.write("        method: 'POST',\r\n");
      out.write("        body: formData\r\n");
      out.write("    })\r\n");
      out.write("    .then(response => {\r\n");
      out.write("        console.log('Received response:', response);\r\n");
      out.write("\r\n");
      out.write("        if (!response.ok) {\r\n");
      out.write("            console.error('Network response was not ok.');\r\n");
      out.write("            return response.text(); // Error message를 문자열로 반환\r\n");
      out.write("        }\r\n");
      out.write("        return response.json();\r\n");
      out.write("    })\r\n");
      out.write("    .then(data => {\r\n");
      out.write("        console.log('Received data:', data);\r\n");
      out.write("\r\n");
      out.write("        if (data.imgUrl) {\r\n");
      out.write("            // 이미지가 성공적으로 업데이트 되었을 때\r\n");
      out.write("            document.getElementById('profileImg').src = '/mini' + data.imgUrl;\r\n");
      out.write("            location.reload();\r\n");
      out.write("        } else {\r\n");
      out.write("            // 서버에서 오류를 반환했을 때\r\n");
      out.write("            console.error('Error:', data.error);\r\n");
      out.write("        }\r\n");
      out.write("    })\r\n");
      out.write("    .catch(error => {\r\n");
      out.write("        console.error('Fetch error:', error);\r\n");
      out.write("    });\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("<div class=\"mypageFrm\">\r\n");
      out.write("   <h2>마이페이지</h2>\r\n");
      out.write("<div class=\"mypage_Main\">\r\n");
      out.write("   <div class=\"mypage_Main1\">\r\n");
      out.write("    <div class=\"mypage_Main_inr\">\r\n");
      out.write("        <div class=\"mypage_Top\"><!-- 여행가는 달 없을때 type1클래스 추가 -->\r\n");
      out.write("     <div class=\"mypage_Top_inr\">\r\n");
      out.write("        \r\n");
      out.write("   <div class=\"mypage_Top_Box\">\r\n");
      out.write("   <div class=\"tit_cont\">\r\n");
      out.write("      <button type=\"button\" title=\"열기\" class=\"btn_titview\"><img src=\"../images/mypage/btn_dot.png\" onclick=\"toggleDiv()\"/></button>\r\n");
      out.write("      <div id=\"hidden_Menu\" class=\"pop_subMenu\">\r\n");
      out.write("         <ul>\r\n");
      out.write("            <li class=\"btn_info\"><a href=\"/mini/mypage/joinEdit\"><img src=\"../images/mypage/member.png\"> 개인정보 변경</a></li>\r\n");
      out.write("            <li class=\"btn_logout\"><a href=\"/mini/mypage/logout\"><img src=\"../images/mypage/logout.png\"> 로그아웃</a></li>\r\n");
      out.write("            <li class=\"btn_out\"><a href=\"javascript:chk()\"><img src=\"../images/mypage/secession.png\"> 회원탈퇴</a></li>\r\n");
      out.write("         </ul>\r\n");
      out.write("      </div>\r\n");
      out.write("   </div>\r\n");
      out.write("      <form  method=\"post\" id=\"pform\" name=\"pform\">\r\n");
      out.write("           <div class=\"profile\">\r\n");
      out.write("             <img class=\"photo\" id=\"profileImg\" src=\"/mini/resources/uploadfile/");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${userimg}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" alt=\"Profile Image\"/>\r\n");
      out.write("         </div>\r\n");
      out.write("        <div>\r\n");
      out.write("            <p class=\"profilename\"> 반가워요!</p> \r\n");
      out.write("            <p class=\"profileuserName\">");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${greeting}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</p>\r\n");
      out.write("        </div>\r\n");
      out.write("    </form>   \r\n");
      out.write("\r\n");
      out.write("    <div class=\"btn_file\">\r\n");
      out.write("       <form id=\"profileForm\" method=\"post\" action=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/mini/mypage/updateProfileImage\" enctype=\"multipart/form-data\">\r\n");
      out.write("    <input type=\"file\" id=\"fileInput\" name=\"userimgfile\" accept=\"image/*\" style=\"display:none;\" onchange=\"submitForm()\"/>\r\n");
      out.write("    <button type=\"button\" onclick=\"document.getElementById('fileInput').click();\">\r\n");
      out.write("        프로필 이미지 설정 <img src=\"../images/mypage/btn_profile.png\" alt=\"프로필 이미지 설정\">\r\n");
      out.write("    </button>\r\n");
      out.write("</form>\r\n");
      out.write("    </div> \r\n");
      out.write("            </div>\r\n");
      out.write("         </div>\r\n");
      out.write("          </div>\r\n");
      out.write("       </div>\r\n");
      out.write("</div>\r\n");
      out.write("<div class=\"mypage_botton\">\r\n");
      out.write("      <h2>나의활동</h2>\r\n");
      out.write("      <div class=\"mypage_botton_inr\">\r\n");
      out.write("         <ul>\r\n");
      out.write("            <li>\r\n");
      out.write("               <a href=\"/mini/mypage/mypage_list_fav\" ><img src=\"../images/mypage/mypagelike.png\"/><em class=\"favoCnt\"></em></a>\r\n");
      out.write("               <p>찜목록</p>\r\n");
      out.write("            </li>\r\n");
      out.write("               <li>\r\n");
      out.write("                  <a href=\"/mini/mypage/mypage_list_cs2\" ><img src=\"../images/mypage/mypagecourse.png\"/><em class=\"cosCnt\"></em></a>\r\n");
      out.write("                  <p>코스</p>\r\n");
      out.write("               </li>\r\n");
      out.write("    		 ");
      if (_jspx_meth_c_005fif_005f2(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("					 <li>\r\n");
      out.write("						<a href=\"/mini/mypage/qnaList\"><img src=\"../images/mypage/mypageQ.png\"/><em class=\"qnaCnt\"></em></a>\r\n");
      out.write("						<p>Q&A</p>\r\n");
      out.write("					</li>\r\n");
      out.write("\r\n");
      out.write("            </ul>\r\n");
      out.write("         </div>\r\n");
      out.write("      \r\n");
      out.write("   </div>\r\n");
      out.write("</div>\r\n");
      out.write("</div>");
      out.write("\r\n");
      out.write("<link rel=\"stylesheet\" href=\"/mini/css/footer.css\" type=\"text/css\"/>\r\n");

    Boolean excludeFooter = (Boolean) request.getAttribute("excludeFooter");
    if (excludeFooter == null || !excludeFooter) {

      out.write("\r\n");
      out.write("  \r\n");
      out.write("\r\n");
      out.write("   <footer>\r\n");
      out.write("      <div class=\"inner\">\r\n");
      out.write("        <div class=\"footer-message\">부산의 축제와 맛집을 소개하는 웹사이트</div>\r\n");
      out.write("        <div class=\"footer-contact\">컨택: ict@google.com</div>\r\n");
      out.write("        <div class=\"footer-copyright\">Copyright 2024 All ⓒ rights reserved</div>\r\n");
      out.write("      </div>\r\n");
      out.write("    </footer>\r\n");
      out.write("</body>\r\n");
      out.write("\r\n");
      out.write("</html>\r\n");

    }

    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fif_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f0 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f0_reused = false;
    try {
      _jspx_th_c_005fif_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f0.setParent(null);
      // /layout/header.jspf(157,15) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f0.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${logStatus != 'Y'}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f0 = _jspx_th_c_005fif_005f0.doStartTag();
      if (_jspx_eval_c_005fif_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("                   <li class=\"lo\"><a onclick=\"openLoginPopup()\"><img src=\"/mini/images/main/unjoin.png\" style=\"width:60px; height:60px;\"/></a></li>\r\n");
          out.write("               ");
          int evalDoAfterBody = _jspx_th_c_005fif_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f0);
      _jspx_th_c_005fif_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f1(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f1 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f1_reused = false;
    try {
      _jspx_th_c_005fif_005f1.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f1.setParent(null);
      // /layout/header.jspf(160,15) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f1.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${logStatus == 'Y'}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f1 = _jspx_th_c_005fif_005f1.doStartTag();
      if (_jspx_eval_c_005fif_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("                   <li class=\"lo\"><a href=\"/mini/mypage/mypage\"><img src=\"/mini/images/main/join.png\" style=\"width:60px; height:60px;\"/></a></li>\r\n");
          out.write("               ");
          int evalDoAfterBody = _jspx_th_c_005fif_005f1.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f1);
      _jspx_th_c_005fif_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f1, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f1_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f2(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f2 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f2_reused = false;
    try {
      _jspx_th_c_005fif_005f2.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f2.setParent(null);
      // /WEB-INF/views/mypage/mypage.jsp(317,7) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f2.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${logId=='root'}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f2 = _jspx_th_c_005fif_005f2.doStartTag();
      if (_jspx_eval_c_005fif_005f2 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("					 <li>\r\n");
          out.write("						<a href=\"/mini/mypage/rootpage\"><img id='admin' src=\"../images/mypage/root.png\"/><em class=\"qnaCnt\"></em></a>\r\n");
          out.write("						<p>관리자</p>\r\n");
          out.write("					</li>\r\n");
          out.write("					");
          int evalDoAfterBody = _jspx_th_c_005fif_005f2.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f2.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f2);
      _jspx_th_c_005fif_005f2_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f2, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f2_reused);
    }
    return false;
  }
}
